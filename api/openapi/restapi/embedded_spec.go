// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "# ...\n## List of all custom errors\nFirst number is HTTP Status code, second is value of \"code\" field in returned JSON object, text description may or may not match \"message\" field in returned JSON object.\n- 409.1000: contact already exists\n",
    "title": "stock",
    "version": "0.2.0"
  },
  "basePath": "/",
  "paths": {
    "/price": {
      "get": {
        "description": "get Currency Price",
        "operationId": "Price",
        "responses": {
          "200": {
            "description": "response",
            "schema": {
              "type": "object",
              "required": [
                "result"
              ],
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/GenericError"
          }
        }
      }
    }
  },
  "definitions": {
    "CurrencyData": {
      "type": "object",
      "required": [
        "key"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CurrencyObject"
          },
          "x-order": 1
        },
        "key": {
          "type": "string",
          "x-order": 0
        }
      }
    },
    "CurrencyObject": {
      "type": "object",
      "required": [
        "key"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CurrencyValues"
          },
          "x-order": 1
        },
        "key": {
          "type": "string",
          "x-order": 0
        }
      }
    },
    "CurrencyValues": {
      "type": "object",
      "required": [
        "PRICE"
      ],
      "properties": {
        "CHANGE24HOUR": {
          "type": "string",
          "x-order": 0
        },
        "CHANGEPCT24HOUR": {
          "type": "string",
          "x-order": 1
        },
        "HIGH24HOUR": {
          "type": "string",
          "x-order": 6
        },
        "LOW24HOUR": {
          "type": "string",
          "x-order": 5
        },
        "MKTCAP": {
          "type": "string",
          "x-order": 9
        },
        "OPEN24HOUR": {
          "type": "string",
          "x-order": 2
        },
        "PRICE": {
          "type": "string",
          "x-order": 7
        },
        "SUPPLY": {
          "type": "string",
          "x-order": 8
        },
        "VOLUME24HOUR": {
          "type": "string",
          "x-order": 3
        },
        "VOLUME24HOURTO": {
          "type": "string",
          "x-order": 4
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "description": "Either same as HTTP Status Code OR \u003e= 600 with HTTP Status Code 422.",
          "type": "integer",
          "format": "int32",
          "x-order": 0
        },
        "message": {
          "type": "string",
          "x-order": 1
        }
      }
    },
    "ResultCurrency": {
      "type": "object",
      "required": [
        "key"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CurrencyData"
          },
          "x-order": 1
        },
        "key": {
          "type": "string",
          "x-order": 0
        }
      }
    }
  },
  "responses": {
    "GenericError": {
      "description": "General errors using same model as used by go-swagger for validation errors.",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "# ...\n## List of all custom errors\nFirst number is HTTP Status code, second is value of \"code\" field in returned JSON object, text description may or may not match \"message\" field in returned JSON object.\n- 409.1000: contact already exists\n",
    "title": "stock",
    "version": "0.2.0"
  },
  "basePath": "/",
  "paths": {
    "/price": {
      "get": {
        "description": "get Currency Price",
        "operationId": "Price",
        "responses": {
          "200": {
            "description": "response",
            "schema": {
              "type": "object",
              "required": [
                "result"
              ],
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }
          },
          "default": {
            "description": "General errors using same model as used by go-swagger for validation errors.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CurrencyData": {
      "type": "object",
      "required": [
        "key"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CurrencyObject"
          },
          "x-order": 1
        },
        "key": {
          "type": "string",
          "x-order": 0
        }
      }
    },
    "CurrencyObject": {
      "type": "object",
      "required": [
        "key"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CurrencyValues"
          },
          "x-order": 1
        },
        "key": {
          "type": "string",
          "x-order": 0
        }
      }
    },
    "CurrencyValues": {
      "type": "object",
      "required": [
        "PRICE"
      ],
      "properties": {
        "CHANGE24HOUR": {
          "type": "string",
          "x-order": 0
        },
        "CHANGEPCT24HOUR": {
          "type": "string",
          "x-order": 1
        },
        "HIGH24HOUR": {
          "type": "string",
          "x-order": 6
        },
        "LOW24HOUR": {
          "type": "string",
          "x-order": 5
        },
        "MKTCAP": {
          "type": "string",
          "x-order": 9
        },
        "OPEN24HOUR": {
          "type": "string",
          "x-order": 2
        },
        "PRICE": {
          "type": "string",
          "x-order": 7
        },
        "SUPPLY": {
          "type": "string",
          "x-order": 8
        },
        "VOLUME24HOUR": {
          "type": "string",
          "x-order": 3
        },
        "VOLUME24HOURTO": {
          "type": "string",
          "x-order": 4
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "description": "Either same as HTTP Status Code OR \u003e= 600 with HTTP Status Code 422.",
          "type": "integer",
          "format": "int32",
          "x-order": 0
        },
        "message": {
          "type": "string",
          "x-order": 1
        }
      }
    },
    "ResultCurrency": {
      "type": "object",
      "required": [
        "key"
      ],
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CurrencyData"
          },
          "x-order": 1
        },
        "key": {
          "type": "string",
          "x-order": 0
        }
      }
    }
  },
  "responses": {
    "GenericError": {
      "description": "General errors using same model as used by go-swagger for validation errors.",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    }
  }
}`))
}
